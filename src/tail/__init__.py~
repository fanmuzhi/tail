#  
import time
import sys,threading
import serial  
import binascii,encodings  
import re  
import socket  
from struct import * 

BAUDRATE =115200
PORT = 'COM4'
# 
ser = serial.Serial(PORT, BAUDRATE)
if not ser.isOpen():
    ser.open()
line = ser.readline()
while line:
    f = open('D:\COM_data\COM_DATA.txt','a')
    print(time.strftime("%Y-%m-%d %X\t") + line.strip())
    f.write(time.strftime("%Y-%m-%d %X\t") + line.strip() + '\n')  
    f.close( )
    line = ser.readline()
ser.close()

# class ComThread:   
#     def __init__(self, Port=PORT):   
#         self.l_serial = None
#         self.alive = False
#         self.waitEnd = None
#         self.port = Port  
#    
#     def waiting(self):   
#         if not self.waitEnd is None:   
#             self.waitEnd.wait()  
#    
#     def SetStopEvent(self):   
#         if not self.waitEnd is None:   
#             self.waitEnd.set()  
#         self.alive = False
#         self.stop()  
#    
#     def start(self):   
#         self.l_serial = serial.Serial();   
#         self.l_serial.port = self.port  
#         self.l_serial.baudrate = BAUDRATE
#         self.l_serial.timeout = 2
#         self.l_serial.open()  
#         if self.l_serial.isOpen():  
#             self.waitEnd = threading.Event()  
#             self.alive = True
#             self.thread_read = None
#             self.thread_read = threading.Thread(target=self.FirstReader)  
#             self.thread_read.setDaemon(1)  
#             self.thread_read.start()  
#             return True
#         else:   
#             return False
#    
#     def FirstReader(self):   
#         while self.alive:   
#             time.sleep(0.1)  
#             try:   
#                 data = '' 
#                 n = self.l_serial.inWaiting()  
#                 if n:   
#                     data = data + self.l_serial.read(n)  
#                     for l in xrange(len(data)):  
# #                         print '%02X' % ord(data[l]),
#                         print data[l],
#    
#                     snddata = '' 
#                     snddata += chr(97)  
#                     tt = 0x12345678
#                     snddata += pack('i', tt)  
#                     snddata += chr(0x64)  
#                     self.l_serial.write(snddata)  
# #                 if len(data) &gt; 0 and ord(data[len(data)-1])==0x45:   
# #                     #pass  
# #                     break
#                     
#             except Exception, ex:   
#                 print str(ex)  
#    
#         self.waitEnd.set();   
#         self.alive = False
#    
#     def stop(self):   
#         self.alive = False
#         self.thread_read.join()  
#         if self.l_serial.isOpen():   
#             self.l_serial.close()  
#      
# if __name__ == '__main__':   
#     rt = ComThread()  
#     try:   
#         if rt.start():   
#             rt.waiting()  
#             rt.stop()  
#         else:   
#             pass;               
#     except Exception,se:   
#         print str(se)  
#        
#     if rt.alive:   
#         rt.stop()  
#    
#     print '' 
#     print 'End OK .'
#     del rt 
